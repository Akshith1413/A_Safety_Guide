# Use an official Ubuntu base image
FROM ubuntu:20.04

# Set non-interactive mode for APT to avoid prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# Install required dependencies
RUN apt-get update && apt-get install -y \
    openjdk-21-jdk \
    wget \
    unzip \
    git \
    curl \
    bash \
    tzdata \
    clang \
    cmake \
    ninja-build \
    pkg-config \
    libgtk-3-dev \
    apt-transport-https \
    ca-certificates \
    gnupg \
    x11-utils \
    libx11-dev \
    libxkbfile-dev \
    libsecret-1-dev \
    libgdk-pixbuf2.0-dev \
    libnss3 \
    libatk1.0-0 \
    libgdk-pixbuf2.0-0 \
    libxtst6 \
    libgconf-2-4 \
    && ln -fs /usr/share/zoneinfo/$TZ /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*

# Install Flutter SDK
RUN git clone https://github.com/flutter/flutter.git /opt/flutter && \
    mkdir -p /opt/flutter/bin/cache && \
    chmod -R 777 /opt/flutter

# Add a non-root user and set permissions
RUN useradd -m flutteruser && \
    chown -R flutteruser:flutteruser /opt/flutter

# Install Google Chrome for web development
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list && \
    apt-get update && apt-get install -y google-chrome-stable && \
    rm -rf /var/lib/apt/lists/*

# Switch to the non-root user
USER flutteruser

# Configure Git to trust the Flutter directory
RUN git config --global --add safe.directory /opt/flutter

# Set environment variables for Java, Flutter, and Android SDK (from Windows path)
ENV JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
ENV ANDROID_HOME=/opt/android-sdk
ENV PATH="$JAVA_HOME/bin:/opt/flutter/bin:/opt/android-sdk/platform-tools:$PATH"

# Set working directory for the Flutter project
WORKDIR /project

# Copy the Flutter project files into the container
COPY . /project

# Expose Android Studio port (default 7101) if needed
EXPOSE 7101

RUN chmod -R 777 /project

# Command to validate Flutter setup or build APK (could also start the app if required)
CMD ["bash", "-c", "flutter config --android-sdk /opt/android-sdk && flutter doctor"]
